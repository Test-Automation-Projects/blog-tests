plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
}

group "com.qa.workshop.tests"
version "1.0.0"

sourceCompatibility = 11

repositories {
    mavenCentral()
}

ext {
    allureGradleVersion = '2.8.1'
    junitVersion = '5.0.0'
    selenideVersion = '5.22.0'
    assertjVersion = '3.14.0'
    junitPlatformVersion = '1.7.2'
    allureVersion = '2.13.6'
    allureJunitVersion = '2.10.0'
    restAssuredVersion = '4.4.0'
    lombokVersion = '1.18.20'
}

dependencies {
    implementation "com.codeborne:selenide:$selenideVersion"
    implementation "io.rest-assured:rest-assured:$restAssuredVersion"
    implementation "org.junit.platform:junit-platform-launcher:1.7.2"
    implementation "io.qameta.allure:allure-selenide:$allureVersion"
    implementation "org.assertj:assertj-core:$assertjVersion"
    implementation "org.projectlombok:lombok:$lombokVersion"

    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "org.junit.platform:junit-platform-runner:$junitPlatformVersion"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junitVersion"
    testRuntimeOnly "io.qameta.allure:allure-junit5:$allureVersion"
}

allure {
    autoconfigure = true
    aspectjweaver = true
    version = allureGradleVersion

    useJUnit5 {
        version = allureGradleVersion
    }
}

test() {
    ["backUrl", "frontUrl", "remoteUrl"].each {
        if (project.hasProperty(it)) systemProperty it, project[it]
    }

    useJUnitPlatform {
        includeEngines 'junit-jupiter', 'junit-vintage'
    }

    finalizedBy 'allureReport'
}
